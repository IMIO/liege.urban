<configure
    xmlns="http://namespaces.zope.org/zope"
    i18n_domain="liege.urban">

    <!-- survey conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.AllParcelsAreValidated"
        name="liege.urban.schedule.parcels_validated"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.ParcelsAdded"
        name="liege.urban.schedule.parcels_added"
    />

    <!-- acknowledgment conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.AcknowledgmentWrittenCondition"
        name="liege.urban.schedule.acknowledgment_written"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AcknowledgmentWrittenCondition"
        name="liege.urban.schedule.acknowledgment_written"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.AcknowledgmentValidatedCondition"
        name="liege.urban.schedule.acknowledgment_validated"
    />

    <!-- opinion requests conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".end_conditions.WaitingForOpinionRequests"
        name="liege.urban.schedule.opinion_requests_waiting"
    />

    <adapter
        for="Products.urban.interfaces.IUrbanEventOpinionRequest
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.IsInternalOpinionRequest"
        name="liege.urban.schedule.is_internal_opinion"
    />

    <!-- inquiry conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryZoneIdentifiedCondition"
        name="liege.urban.schedule.inquiry_zone_identified"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsDoneCondition"
        name="liege.urban.schedule.inquiry_documents_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsValidatedCondition"
        name="liege.urban.schedule.inquiry_documents_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.InquiryDocumentsSentCondition"
        name="liege.urban.schedule.inquiry_documents_sent"
    />

    <!-- FD opinion conditions -->
    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.OnlyNeedFDOpinion"
        name="liege.urban.schedule.only_need_FD_opinion"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task_config.ITaskConfig"
        provides="imio.schedule.interfaces.ICreationCondition"
        factory=".conditions.LicenceStateIsFDOpinion"
        name="liege.urban.schedule.licence_state_is_FD_opinion"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeProjectWritten"
        name="liege.urban.schedule.college_project_writen"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeProjectWritten"
        name="liege.urban.schedule.college_project_writen"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeProjectValidated"
        name="liege.urban.schedule.college_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeProjectValidated"
        name="liege.urban.schedule.college_project_validated"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.ProjectSentToCollege"
        name="liege.urban.schedule.project_sent_to_college"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.ProjectSentToCollege"
        name="liege.urban.schedule.project_sent_to_college"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.CollegeDone"
        name="liege.urban.schedule.college_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.CollegeDone"
        name="liege.urban.schedule.college_done"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.FDOpinionAsked"
        name="liege.urban.schedule.FD_opinion_asked"
    />

    <adapter
        for="Products.urban.interfaces.IBaseBuildLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.FDOpinionReceived"
        name="liege.urban.schedule.FD_opinion_received"
    />

    <!-- final decision conditions -->
    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IStartCondition"
        factory=".conditions.DecisionProjectDraftedCondition"
        name="liege.urban.schedule.decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionProjectDraftedCondition"
        name="liege.urban.schedule.decision_project_drafted"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionProjectSentCondition"
        name="liege.urban.schedule.decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionProjectSentCondition"
        name="liege.urban.schedule.decision_project_sent"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IEndCondition"
        factory=".conditions.DecisionNotifiedCondition"
        name="liege.urban.schedule.decision_notified"
    />

    <adapter
        for="Products.urban.interfaces.IGenericLicence
             imio.schedule.content.task.IAutomatedTask"
        provides="imio.schedule.interfaces.IMacroTaskEndCondition"
        factory=".conditions.DecisionNotifiedCondition"
        name="liege.urban.schedule.decision_notified"
    />

</configure>
